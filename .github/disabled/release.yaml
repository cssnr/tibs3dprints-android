name: "Release"

on:
  workflow_dispatch:
  release:
    types: [published]

#concurrency:
#  group: ${{ github.workflow }}-${{ github.ref }}
#  cancel-in-progress: true

jobs:
  build:
    name: "Build"
    uses: ./.github/workflows/build.yaml
    secrets: inherit
    with:
      name: tibs3dprints.apk
      key_alias: tibs-release
      artifact_name: tibs3dprints
      google_services: app/google-services.json

  process:
    name: "Process"
    needs: [build]
    runs-on: ubuntu-latest
    timeout-minutes: 15
    permissions:
      contents: write

    steps:
      - name: "Debug Event"
        if: ${{ !github.event.act }}
        continue-on-error: true
        run: |
          echo "ref: ${{ github.ref }}"
          echo "event_name: ${{ github.event_name }}"
          echo "github.event.repository.name: ${{ github.event.repository.name }}"

          echo "::group::cat event.json"
          cat "${GITHUB_EVENT_PATH}"
          echo "::endgroup::"

      - name: "VirusTotal"
        if: ${{ github.event_name == 'release' }}
        uses: cssnr/virustotal-action@v1
        continue-on-error: true
        with:
          vt_api_key: ${{ secrets.VT_API_KEY }}

      - name: "Update Release Notes Action"
        if: ${{ github.event_name == 'release' }}
        uses: smashedr/update-release-notes-action@master
        continue-on-error: true
        with:
          type: generic

  cleanup:
    name: "Cleanup"
    if: ${{ always() }}
    needs: [build, process]
    runs-on: ubuntu-latest
    timeout-minutes: 15
    steps:
      - name: "Send Failure Notification"
        if: ${{ needs.build.result != 'success' || needs.process.result != 'success'  }}
        uses: sarisia/actions-status-discord@v1
        with:
          webhook: ${{ secrets.DISCORD_WEBHOOK }}
          status: failure
